function [U,D,H] = diag3D(A,B,delta,jz)

alpha = [2*jz, A+conj(B); B+conj(A),2*jz];
beta  = [0, -A-2i*delta+conj(B); ...
         conj(A)+2i*conj(delta)-B, 0];

H = [alpha, beta; beta', -alpha]/4;

c = sqrt(abs(A).^4+abs(B).^4+4.*abs(B).^2.*(jz.^2+abs(delta).^2) ...
   +abs(A).^2.*((-2)*abs(B).^2+4*(jz.^2+abs(delta).^2))+8.*(jz.^2.* ...
  real(A.*B)+real(B.*delta.^2.*conj(A))));

em = (1/(2*sqrt(2)))*sqrt(2.*jz.^2+abs(A).^2+abs(B).^2+2*abs(delta).^2 -c);
ep = (1/(2*sqrt(2)))*sqrt(2.*jz.^2+abs(A).^2+abs(B).^2+2*abs(delta).^2 +c);

D = diag([em,ep,-em,-ep]);

%The following code was generated with ToMatlab

vm = [(B.*delta.^2+4.*A.*em.^2+(-4).*A.*em.*jz+A.*jz.^2+((-1).*A.*B+(( ...
  -2).*em+jz).^2).*conj(B)+conj(A).*(delta.^2+(-1).*A.*conj(B))).*(( ...
  sqrt(-1)*(-2)).*B.*delta.*em+A.*B.*jz+(sqrt(-1)*(-1)).*B.*delta.* ...
  jz+conj(A).*(2.*A.*em+(sqrt(-1)*(-2)).*delta.*em+(sqrt(-1)*(-1)).* ...
  delta.*jz+(-1).*jz.*conj(B))+(sqrt(-1)*(-2)).*A.*em.*conj(delta)+ ...
  sqrt(-1).*A.*jz.*conj(delta)+conj(B).*((-2).*B.*em+sqrt(-1).*((-2) ...
  .*em+jz).*conj(delta))).^(-1),((sqrt(-1)*(-2)).*B.*delta.*em+(-16) ...
  .*em.^3+A.*B.*jz+sqrt(-1).*B.*delta.*jz+8.*em.^2.*jz+4.*em.*jz.^2+ ...
  (-2).*jz.^3+conj(A).*(2.*A.*em+(sqrt(-1)*2).*delta.*em+(sqrt(-1)*( ...
  -1)).*delta.*jz+jz.*conj(B))+(sqrt(-1)*(-2)).*A.*em.*conj(delta)+ ...
  4.*delta.*em.*conj(delta)+sqrt(-1).*A.*jz.*conj(delta)+(-2).* ...
  delta.*jz.*conj(delta)+conj(B).*(2.*B.*em+(sqrt(-1)*(-1)).*((-2).* ...
  em+jz).*conj(delta))).*((sqrt(-1)*(-2)).*B.*delta.*em+A.*B.*jz+( ...
  sqrt(-1)*(-1)).*B.*delta.*jz+conj(A).*(2.*A.*em+(sqrt(-1)*(-2)).* ...
  delta.*em+(sqrt(-1)*(-1)).*delta.*jz+(-1).*jz.*conj(B))+(sqrt(-1)* ...
  (-2)).*A.*em.*conj(delta)+sqrt(-1).*A.*jz.*conj(delta)+conj(B).*(( ...
  -2).*B.*em+sqrt(-1).*((-2).*em+jz).*conj(delta))).^(-1),(-2).*(( ...
  2.*em+jz).*(B+conj(A)).*(A+(sqrt(-1)*(-2)).*delta+(-1).*conj(B))+( ...
  (-2).*em+jz).*(A+conj(B)).*(B+(-1).*conj(A)+(sqrt(-1)*2).*conj( ...
  delta))).^(-1).*((-1).*B.*delta.^2+(-4).*A.*em.^2+(sqrt(-1)*8).* ...
  delta.*em.^2+A.*jz.^2+(sqrt(-1)*(-2)).*delta.*jz.^2+conj(A).*( ...
  delta.^2+(-1).*A.*conj(B))+(sqrt(-1)*(-2)).*delta.^2.*conj(delta)+ ...
  conj(B).*(A.*B+4.*em.^2+(-1).*jz.^2+(sqrt(-1)*2).*A.*conj(delta))),1].';

vp =[(B.*delta.^2+4.*A.*ep.^2+(-4).*A.*ep.*jz+A.*jz.^2+((-1).*A.*B+((-2).* ...
  ep+jz).^2).*conj(B)+conj(A).*(delta.^2+(-1).*A.*conj(B))).*((sqrt( ...
  -1)*(-2)).*B.*delta.*ep+A.*B.*jz+(sqrt(-1)*(-1)).*B.*delta.*jz+ ...
  conj(A).*(2.*A.*ep+(sqrt(-1)*(-2)).*delta.*ep+(sqrt(-1)*(-1)).* ...
  delta.*jz+(-1).*jz.*conj(B))+(sqrt(-1)*(-2)).*A.*ep.*conj(delta)+ ...
  sqrt(-1).*A.*jz.*conj(delta)+conj(B).*((-2).*B.*ep+sqrt(-1).*((-2) ...
  .*ep+jz).*conj(delta))).^(-1),((sqrt(-1)*(-2)).*B.*delta.*ep+(-16) ...
  .*ep.^3+A.*B.*jz+sqrt(-1).*B.*delta.*jz+8.*ep.^2.*jz+4.*ep.*jz.^2+ ...
  (-2).*jz.^3+conj(A).*(2.*A.*ep+(sqrt(-1)*2).*delta.*ep+(sqrt(-1)*( ...
  -1)).*delta.*jz+jz.*conj(B))+(sqrt(-1)*(-2)).*A.*ep.*conj(delta)+ ...
  4.*delta.*ep.*conj(delta)+sqrt(-1).*A.*jz.*conj(delta)+(-2).* ...
  delta.*jz.*conj(delta)+conj(B).*(2.*B.*ep+(sqrt(-1)*(-1)).*((-2).* ...
  ep+jz).*conj(delta))).*((sqrt(-1)*(-2)).*B.*delta.*ep+A.*B.*jz+( ...
  sqrt(-1)*(-1)).*B.*delta.*jz+conj(A).*(2.*A.*ep+(sqrt(-1)*(-2)).* ...
  delta.*ep+(sqrt(-1)*(-1)).*delta.*jz+(-1).*jz.*conj(B))+(sqrt(-1)* ...
  (-2)).*A.*ep.*conj(delta)+sqrt(-1).*A.*jz.*conj(delta)+conj(B).*(( ...
  -2).*B.*ep+sqrt(-1).*((-2).*ep+jz).*conj(delta))).^(-1),(-2).*(( ...
  2.*ep+jz).*(B+conj(A)).*(A+(sqrt(-1)*(-2)).*delta+(-1).*conj(B))+( ...
  (-2).*ep+jz).*(A+conj(B)).*(B+(-1).*conj(A)+(sqrt(-1)*2).*conj( ...
  delta))).^(-1).*((-1).*B.*delta.^2+(-4).*A.*ep.^2+(sqrt(-1)*8).* ...
  delta.*ep.^2+A.*jz.^2+(sqrt(-1)*(-2)).*delta.*jz.^2+conj(A).*( ...
  delta.^2+(-1).*A.*conj(B))+(sqrt(-1)*(-2)).*delta.^2.*conj(delta)+ ...
  conj(B).*(A.*B+4.*ep.^2+(-1).*jz.^2+(sqrt(-1)*2).*A.*conj(delta))),1].';
  
%Now take k to -k
A=conj(A); B=conj(B); delta = conj(delta);

vm2 = [(B.*delta.^2+4.*A.*em.^2+(-4).*A.*em.*jz+A.*jz.^2+((-1).*A.*B+(( ...
  -2).*em+jz).^2).*conj(B)+conj(A).*(delta.^2+(-1).*A.*conj(B))).*(( ...
  sqrt(-1)*(-2)).*B.*delta.*em+A.*B.*jz+(sqrt(-1)*(-1)).*B.*delta.* ...
  jz+conj(A).*(2.*A.*em+(sqrt(-1)*(-2)).*delta.*em+(sqrt(-1)*(-1)).* ...
  delta.*jz+(-1).*jz.*conj(B))+(sqrt(-1)*(-2)).*A.*em.*conj(delta)+ ...
  sqrt(-1).*A.*jz.*conj(delta)+conj(B).*((-2).*B.*em+sqrt(-1).*((-2) ...
  .*em+jz).*conj(delta))).^(-1),((sqrt(-1)*(-2)).*B.*delta.*em+(-16) ...
  .*em.^3+A.*B.*jz+sqrt(-1).*B.*delta.*jz+8.*em.^2.*jz+4.*em.*jz.^2+ ...
  (-2).*jz.^3+conj(A).*(2.*A.*em+(sqrt(-1)*2).*delta.*em+(sqrt(-1)*( ...
  -1)).*delta.*jz+jz.*conj(B))+(sqrt(-1)*(-2)).*A.*em.*conj(delta)+ ...
  4.*delta.*em.*conj(delta)+sqrt(-1).*A.*jz.*conj(delta)+(-2).* ...
  delta.*jz.*conj(delta)+conj(B).*(2.*B.*em+(sqrt(-1)*(-1)).*((-2).* ...
  em+jz).*conj(delta))).*((sqrt(-1)*(-2)).*B.*delta.*em+A.*B.*jz+( ...
  sqrt(-1)*(-1)).*B.*delta.*jz+conj(A).*(2.*A.*em+(sqrt(-1)*(-2)).* ...
  delta.*em+(sqrt(-1)*(-1)).*delta.*jz+(-1).*jz.*conj(B))+(sqrt(-1)* ...
  (-2)).*A.*em.*conj(delta)+sqrt(-1).*A.*jz.*conj(delta)+conj(B).*(( ...
  -2).*B.*em+sqrt(-1).*((-2).*em+jz).*conj(delta))).^(-1),(-2).*(( ...
  2.*em+jz).*(B+conj(A)).*(A+(sqrt(-1)*(-2)).*delta+(-1).*conj(B))+( ...
  (-2).*em+jz).*(A+conj(B)).*(B+(-1).*conj(A)+(sqrt(-1)*2).*conj( ...
  delta))).^(-1).*((-1).*B.*delta.^2+(-4).*A.*em.^2+(sqrt(-1)*8).* ...
  delta.*em.^2+A.*jz.^2+(sqrt(-1)*(-2)).*delta.*jz.^2+conj(A).*( ...
  delta.^2+(-1).*A.*conj(B))+(sqrt(-1)*(-2)).*delta.^2.*conj(delta)+ ...
  conj(B).*(A.*B+4.*em.^2+(-1).*jz.^2+(sqrt(-1)*2).*A.*conj(delta))),1].';

vp2 =[(B.*delta.^2+4.*A.*ep.^2+(-4).*A.*ep.*jz+A.*jz.^2+((-1).*A.*B+((-2).* ...
  ep+jz).^2).*conj(B)+conj(A).*(delta.^2+(-1).*A.*conj(B))).*((sqrt( ...
  -1)*(-2)).*B.*delta.*ep+A.*B.*jz+(sqrt(-1)*(-1)).*B.*delta.*jz+ ...
  conj(A).*(2.*A.*ep+(sqrt(-1)*(-2)).*delta.*ep+(sqrt(-1)*(-1)).* ...
  delta.*jz+(-1).*jz.*conj(B))+(sqrt(-1)*(-2)).*A.*ep.*conj(delta)+ ...
  sqrt(-1).*A.*jz.*conj(delta)+conj(B).*((-2).*B.*ep+sqrt(-1).*((-2) ...
  .*ep+jz).*conj(delta))).^(-1),((sqrt(-1)*(-2)).*B.*delta.*ep+(-16) ...
  .*ep.^3+A.*B.*jz+sqrt(-1).*B.*delta.*jz+8.*ep.^2.*jz+4.*ep.*jz.^2+ ...
  (-2).*jz.^3+conj(A).*(2.*A.*ep+(sqrt(-1)*2).*delta.*ep+(sqrt(-1)*( ...
  -1)).*delta.*jz+jz.*conj(B))+(sqrt(-1)*(-2)).*A.*ep.*conj(delta)+ ...
  4.*delta.*ep.*conj(delta)+sqrt(-1).*A.*jz.*conj(delta)+(-2).* ...
  delta.*jz.*conj(delta)+conj(B).*(2.*B.*ep+(sqrt(-1)*(-1)).*((-2).* ...
  ep+jz).*conj(delta))).*((sqrt(-1)*(-2)).*B.*delta.*ep+A.*B.*jz+( ...
  sqrt(-1)*(-1)).*B.*delta.*jz+conj(A).*(2.*A.*ep+(sqrt(-1)*(-2)).* ...
  delta.*ep+(sqrt(-1)*(-1)).*delta.*jz+(-1).*jz.*conj(B))+(sqrt(-1)* ...
  (-2)).*A.*ep.*conj(delta)+sqrt(-1).*A.*jz.*conj(delta)+conj(B).*(( ...
  -2).*B.*ep+sqrt(-1).*((-2).*ep+jz).*conj(delta))).^(-1),(-2).*(( ...
  2.*ep+jz).*(B+conj(A)).*(A+(sqrt(-1)*(-2)).*delta+(-1).*conj(B))+( ...
  (-2).*ep+jz).*(A+conj(B)).*(B+(-1).*conj(A)+(sqrt(-1)*2).*conj( ...
  delta))).^(-1).*((-1).*B.*delta.^2+(-4).*A.*ep.^2+(sqrt(-1)*8).* ...
  delta.*ep.^2+A.*jz.^2+(sqrt(-1)*(-2)).*delta.*jz.^2+conj(A).*( ...
  delta.^2+(-1).*A.*conj(B))+(sqrt(-1)*(-2)).*delta.^2.*conj(delta)+ ...
  conj(B).*(A.*B+4.*ep.^2+(-1).*jz.^2+(sqrt(-1)*2).*A.*conj(delta))),1].';
  
% vp3 = [(B.*delta.^2+4.*A.*em.^2+4.*A.*em.*jz+A.*jz.^2+((-1).*A.*B+(2.* ...
%   em+jz).^2).*conj(B)+conj(A).*(delta.^2+(-1).*A.*conj(B))).*((sqrt( ...
%   -1)*2).*B.*delta.*em+A.*B.*jz+(sqrt(-1)*(-1)).*B.*delta.*jz+conj( ...
%   A).*((-2).*A.*em+(sqrt(-1)*2).*delta.*em+(sqrt(-1)*(-1)).*delta.* ...
%   jz+(-1).*jz.*conj(B))+(sqrt(-1)*2).*A.*em.*conj(delta)+sqrt(-1).* ...
%   A.*jz.*conj(delta)+conj(B).*(2.*B.*em+sqrt(-1).*(2.*em+jz).*conj( ...
%   delta))).^(-1),((sqrt(-1)*2).*B.*delta.*em+16.*em.^3+A.*B.*jz+ ...
%   sqrt(-1).*B.*delta.*jz+8.*em.^2.*jz+(-4).*em.*jz.^2+(-2).*jz.^3+ ...
%   conj(A).*((-2).*A.*em+(sqrt(-1)*(-2)).*delta.*em+(sqrt(-1)*(-1)).* ...
%   delta.*jz+jz.*conj(B))+(sqrt(-1)*2).*A.*em.*conj(delta)+(-4).* ...
%   delta.*em.*conj(delta)+sqrt(-1).*A.*jz.*conj(delta)+(-2).*delta.* ...
%   jz.*conj(delta)+(-1).*conj(B).*(2.*B.*em+sqrt(-1).*(2.*em+jz).* ...
%   conj(delta))).*((sqrt(-1)*2).*B.*delta.*em+A.*B.*jz+(sqrt(-1)*(-1) ...
%   ).*B.*delta.*jz+conj(A).*((-2).*A.*em+(sqrt(-1)*2).*delta.*em+( ...
%   sqrt(-1)*(-1)).*delta.*jz+(-1).*jz.*conj(B))+(sqrt(-1)*2).*A.*em.* ...
%   conj(delta)+sqrt(-1).*A.*jz.*conj(delta)+conj(B).*(2.*B.*em+sqrt( ...
%   -1).*(2.*em+jz).*conj(delta))).^(-1),(B.*delta.^2+4.*A.*em.^2+( ...
%   sqrt(-1)*(-8)).*delta.*em.^2+(-1).*A.*jz.^2+(sqrt(-1)*2).*delta.* ...
%   jz.^2+conj(A).*((-1).*delta.^2+A.*conj(B))+(sqrt(-1)*2).* ...
%   delta.^2.*conj(delta)+conj(B).*((-1).*A.*B+(-4).*em.^2+jz.^2+( ...
%   sqrt(-1)*(-2)).*A.*conj(delta))).*((sqrt(-1)*2).*B.*delta.*em+A.* ...
%   B.*jz+(sqrt(-1)*(-1)).*B.*delta.*jz+conj(A).*((-2).*A.*em+(sqrt( ...
%   -1)*2).*delta.*em+(sqrt(-1)*(-1)).*delta.*jz+(-1).*jz.*conj(B))+( ...
%   sqrt(-1)*2).*A.*em.*conj(delta)+sqrt(-1).*A.*jz.*conj(delta)+conj( ...
%   B).*(2.*B.*em+sqrt(-1).*(2.*em+jz).*conj(delta))).^(-1),1].';
  
  
% vp3 (B.*delta.^2+4.*A.*ep.^2+4.*A.*ep.*jz+A.*jz.^2+((-1).*A.*B+(2.* ...
%   ep+jz).^2).*conj(B)+conj(A).*(delta.^2+(-1).*A.*conj(B))).*((sqrt( ...
%   -1)*2).*B.*delta.*ep+A.*B.*jz+(sqrt(-1)*(-1)).*B.*delta.*jz+conj( ...
%   A).*((-2).*A.*ep+(sqrt(-1)*2).*delta.*ep+(sqrt(-1)*(-1)).*delta.* ...
%   jz+(-1).*jz.*conj(B))+(sqrt(-1)*2).*A.*ep.*conj(delta)+sqrt(-1).* ...
%   A.*jz.*conj(delta)+conj(B).*(2.*B.*ep+sqrt(-1).*(2.*ep+jz).*conj( ...
%   delta))).^(-1),((sqrt(-1)*2).*B.*delta.*ep+16.*ep.^3+A.*B.*jz+ ...
%   sqrt(-1).*B.*delta.*jz+8.*ep.^2.*jz+(-4).*ep.*jz.^2+(-2).*jz.^3+ ...
%   conj(A).*((-2).*A.*ep+(sqrt(-1)*(-2)).*delta.*ep+(sqrt(-1)*(-1)).* ...
%   delta.*jz+jz.*conj(B))+(sqrt(-1)*2).*A.*ep.*conj(delta)+(-4).* ...
%   delta.*ep.*conj(delta)+sqrt(-1).*A.*jz.*conj(delta)+(-2).*delta.* ...
%   jz.*conj(delta)+(-1).*conj(B).*(2.*B.*ep+sqrt(-1).*(2.*ep+jz).* ...
%   conj(delta))).*((sqrt(-1)*2).*B.*delta.*ep+A.*B.*jz+(sqrt(-1)*(-1) ...
%   ).*B.*delta.*jz+conj(A).*((-2).*A.*ep+(sqrt(-1)*2).*delta.*ep+( ...
%   sqrt(-1)*(-1)).*delta.*jz+(-1).*jz.*conj(B))+(sqrt(-1)*2).*A.*ep.* ...
%   conj(delta)+sqrt(-1).*A.*jz.*conj(delta)+conj(B).*(2.*B.*ep+sqrt( ...
%   -1).*(2.*ep+jz).*conj(delta))).^(-1),(B.*delta.^2+4.*A.*ep.^2+( ...
%   sqrt(-1)*(-8)).*delta.*ep.^2+(-1).*A.*jz.^2+(sqrt(-1)*2).*delta.* ...
%   jz.^2+conj(A).*((-1).*delta.^2+A.*conj(B))+(sqrt(-1)*2).* ...
%   delta.^2.*conj(delta)+conj(B).*((-1).*A.*B+(-4).*ep.^2+jz.^2+( ...
%   sqrt(-1)*(-2)).*A.*conj(delta))).*((sqrt(-1)*2).*B.*delta.*ep+A.* ...
%   B.*jz+(sqrt(-1)*(-1)).*B.*delta.*jz+conj(A).*((-2).*A.*ep+(sqrt( ...
%   -1)*2).*delta.*ep+(sqrt(-1)*(-1)).*delta.*jz+(-1).*jz.*conj(B))+( ...
%   sqrt(-1)*2).*A.*ep.*conj(delta)+sqrt(-1).*A.*jz.*conj(delta)+conj( ...
%   B).*(2.*B.*ep+sqrt(-1).*(2.*ep+jz).*conj(delta))).^(-1),1];

one = eye(2);
zero = zeros(2);
gamma = [zero,one;one,zero];

vm2 = -gamma*conj(vm2);
vp2 = -gamma*conj(vp2);

vm = vm/norm(vm);
vp = vp/norm(vp);
vm2=vm2/norm(vm2);
vp2=vp2/norm(vp2);

U = [vm2, vp2, vm, vp];




